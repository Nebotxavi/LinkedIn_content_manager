rank:
  description: >
    Rank news about {topic} based on their relevance to the user's interests.

    You will receive a user's interests and a news article. Your job is to:
      1. Determine how closely the article aligns with the user's interests.
      2. Calculate a relevance score between 0 and 10.
      3. Provide a brief two-line explanation justifying your ranking.

      Use the following criteria to calculate the score:

      Base Topics (cumulative points):
      - {priority_1} (+4 points)
      - {priority_2} (+3 points)
      - {priority_3} (+2 points)
      - {priority_4} (+1 points)

      If an article covers more than one priority, add up all applicable points.  
      Example: An article about {priority_1} and {priority_2} starts at 9 points.

      Additional Points (up to +3 total, depending on depth):
      - Breaking or recent news that changes the current state of the art 
      - Technical depth with real data or well-explained impact on the field
      {additional_criteria}

      Penalties (subtract from total):
      - Contains repetitive or shallow content (-2)
      - Hype-filled speculation with no real substance (-2)

      User's interests:
        {user_interests}

      News article details:
        - Title: {title}
        - Text: {text}
        - Source: {source}
        - Link: {link}

      Note: you are receiving text from websites that may contain other news and links descriptions. 
            focus only on the article main text and title.
      Note: {remark}

      Example Scoring Process:
      1. Start by checking whether the article is about any of the four priority topics. Sum those points.
      2. If the article is recent or provides deep technical insight, add 1-3 additional points.
      3. If the article is shallow, off-topic, or hype-filled, apply penalties.
      4. Ensure the final score is capped between 0 and 10.
  expected_output: >
    A rank puntuation between 0 and 10. And a 2 lines explanation of the rank.
  agent: ranker
